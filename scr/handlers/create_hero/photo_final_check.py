from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from states.states_create_hero import CreateHero
from aiogram import F
from keyboards.keyboards import check_hero
from keyboards.keyboards import menu_keyboard

async def final_build(router, F, db):
    @router.message(CreateHero.getting_photo, F.photo)
    async def handle_character_photo(message: Message, state: FSMContext):
        try:
            photo_id = message.photo[-1].file_id
            await state.update_data({'character_photo': photo_id})

            data = await state.get_data()
            cm1_k, cm1_v = next(iter(data['communications_1'].items())) #–í—Ä–æ–¥–µ –∏ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–æ—Ä–º –±—É–¥–µ—Ç
            cm2_k, cm2_v = next(iter(data['communications_2'].items()))
            await message.answer_photo(
                photo=photo_id,
                caption="üì∏ *–ü–æ—Ä—Ç—Ä–µ—Ç –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞*",
                parse_mode='Markdown'
            )
            character_info = (
                "üåü *–í–ê–® –ü–ï–†–°–û–ù–ê–ñ –°–û–ó–î–ê–ù!* üåü\n\n"
                f"üîÆ *–û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø*\n"
                f"üè∑ –ò–º—è: {data['name']}\n"
                f"üé≠ –ê—Ä—Ö–µ—Ç–∏–ø: {data['archetype']}\n"
                f"üß¨ –í–∏–¥: {data['species']}\n"
                f"üè† –†–æ–¥–Ω–æ–π –∫—Ä–∞–π: {data['home']}\n"
                f"üí≠ –ü—Ä–∏—á–∏–Ω–∞ —Å—Ç—Ä–∞–Ω—Å—Ç–≤–∏–π: {data['reason']}\n"
                f"üìú –û—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–∑–∞–¥–∏: {data['left_behind']}\n\n"
                
                f"üìä *–•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò*\n"
                f"üí™ –ú–æ—â—å: {data['power']}\n"
                f"üèπ –õ–æ–≤–∫–æ—Å—Ç—å: {data['agility']}\n"
                f"üçÄ –£–¥–∞—á–∞: {data['luck']}\n"
                f"ü¶ä –•–∏—Ç—Ä–æ—Å—Ç—å: {data['cunning']}\n"
                f"‚ú® –•–∞—Ä–∏–∑–º–∞: {data['charm']}\n\n"
                
                f"üèõ *–§–†–ê–ö–¶–ò–ò –ò –û–¢–ù–û–®–ï–ù–ò–Ø*\n"
                f"üëë –ú–∞—Ä–∫–∏–∑–∞—Ç: *–ø* {data['marquisate_prestige_p']} | {data['marquisate_prestige_m']}\n"
                f"ü¶Ö –ö—Ä—ã–ª–∞—Ç—ã–µ –î–∏–Ω–∞—Å—Ç–∏–∏: *–ø* {data['winged_dynasties_prestige_p']} | {data['winged_dynasties_prestige_m']}\n"
                f"üå≤ –õ–µ—Å–Ω–æ–π –ê–ª—å—è–Ω—Å: *–ø* {data['forest_alliance_prestige_p']} | {data['forest_alliance_prestige_m']}\n"
                f"üçÑ –õ–µ—Å–Ω–æ–π –ù–∞—Ä–æ–¥: *–ø* {data['woodland_folk_prestige_p']} | {data['woodland_folk_prestige_m']}\n\n"
                
                f"üí∞ *–†–ï–°–£–†–°–´ –ò –ù–ê–í–´–ö–ò*\n"
                f"ü™ô –î–µ–Ω—å–≥–∏: {data['money']} —Å–µ—Ä–µ–±—Ä–∞\n"
                f"üéØ –í–æ—Ä–æ–≤—Å–∫–æ–π –Ω–∞–≤—ã–∫: {data['rogue_skills']}\n"
                f"‚öî –ë–æ–µ–≤–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ: {data['weapon_skill']}\n\n"
                
                f"üíé *–û–°–û–ë–ï–ù–ù–û–°–¢–ò –í–ù–ï–®–ù–û–°–¢–ò*\n"
                f"{data['features']}\n\n"
                
                f"üé≠ *–ú–ê–ù–ï–†–´ –ü–û–í–ï–î–ï–ù–ò–Ø*\n"
                f"{data['behavior']}\n\n"
                
                f"üí° *–ú–û–¢–ò–í–ê–¶–ò–Ø*\n"
                f"{data['motives']}\n\n"
                
                f"üß† *–û–°–û–ë–ï–ù–ù–û–°–¢–ò –õ–ò–ß–ù–û–°–¢–ò*\n"
                f"{data['personality']}\n\n"
                
                f"üé• *–•–û–î–´*\n"
                f"{data['moves']}"
                
                f"ü§ù *–°–í–Ø–ó–ò –° –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò*\n"
                f"*{cm1_k}*{cm1_v}\n"
                f"*{cm2_k}*{cm2_v}"
            )
            await message.answer(character_info, parse_mode="Markdown", reply_markup=check_hero())
            # await state.set_state(CreateHero.finall_check)
            
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")

    @router.message(F.text == "‚ù§Ô∏è –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º–æ–π –≤—ã–±–æ—Ä")
    async def save_character(message: Message, state: FSMContext):
        try:
            data = await state.get_data()
            chat_id = message.chat.id
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ç–∞–±–ª–∏—Ü—É info
            cm1_k, cm1_v = next(iter(data['communications_1'].items())) #–í—Ä–æ–¥–µ –∏ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–æ—Ä–º –±—É–¥–µ—Ç
            cm2_k, cm2_v = next(iter(data['communications_2'].items()))


            import json
            communications = [cm1_k, cm1_v, '\n', cm2_k, cm2_v]

            serialized = json.dumps(communications) #lite –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–∏—Å—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∏–º –ª–∏—Å—Ç —Ç–∏–ø –≤ —Å—Ç—Ä–æ–∫—É json –∏ –ø–æ—Ç–æ–º –∫–∞–∫ –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å —á–∏—Ç–∞–µ–º –µ–≥–æ loads –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫ '[cm1_k, cm1_v, cm2_k, cm2_v]'

            db.insert_data(
                chat_id,
                data.get('archetype'),
                data.get('name'),
                data.get('species'),
                data.get('features'),
                data.get('behavior'),
                data.get('home'),
                data.get('reason'),
                data.get('left_behind'),
                serialized,
                data.get('character_photo'),
                data.get('motives'),
                False,  # is_active
                request='''
                INSERT INTO info (
                    chat_id, archetype, name, species, features, behavior,
                    home, reason, left_behind, communications, character_photo,
                    motives, is_active
                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                '''
            )

            db.insert_data(
                chat_id, 0, 0, 0, 
                request='''
                INSERT INTO character_status (chat_id, injury, depletion, costs)
                VALUES (?, ?, ?, ?)
                '''
            )

            db.insert_data(
                chat_id,
                data.get('money', 0),
                "", 
                request='''
                INSERT INTO inventory (chat_id, money, items)
                VALUES (?, ?, ?)
                '''
            )

            db.insert_data(
                chat_id,
                data.get('marquisate_prestige_p', 0),
                data.get('winged_dynasties_prestige_p', 0),
                data.get('forest_alliance_prestige_p', 0),
                data.get('woodland_folk_prestige_p', 0),
                data.get('marquisate_prestige_m', 0),
                data.get('winged_dynasties_prestige_m', 0),
                data.get('forest_alliance_prestige_m', 0),
                data.get('woodland_folk_prestige_m', 0),
                request='''
                INSERT INTO fractions (
                    chat_id, marquisate_prestige_p, winged_dynasties_prestige_p,
                    forest_alliance_prestige_p, woodland_folk_prestige_p, 
                    marquisate_prestige_m, winged_dynasties_prestige_m,
                    forest_alliance_prestige_m, woodland_folk_prestige_m
                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
                '''
            )

            db.insert_data(
                chat_id,
                data.get('power', 0),
                data.get('agility', 0),
                data.get('luck', 0),
                data.get('cunning', 0),
                data.get('charm', 0),
                request='''
                INSERT INTO stats (
                    chat_id, power, agility, luck, cunning, charm
                ) VALUES (?, ?, ?, ?, ?, ?)
                '''
            )

            db.insert_data(
                chat_id,
                data.get('rogue_skills', ''),
                data.get('weapon_skill', ''),
                data.get('moves', ''),
                request='''
                INSERT INTO skills (chat_id, rogue_skills, weapon_skill, moves)
                VALUES (?, ?, ?, ?)
                '''
            )

            await message.answer("‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!", reply_markup=menu_keyboard())
            await state.clear()

        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {str(e)}")
            print(f"Error saving character: {e}")