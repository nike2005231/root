from aiogram.types import ReplyKeyboardRemove
from states.state_change_hero import SkillsState
from handlers.handlers_changes_stats.send_mes_all import send_message_all_users
from keyboards.keyboards import profile_keyboard

async def init_skills(router, F, db, message):
    @router.message(F.text == "üí™ –ò–∑–º–µ–Ω–∏—Ç—å –ú–æ—â—å")
    async def change_strength(message, state):
        await message.answer(
            'üí• *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ú–æ—â–∏:*\n',
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(SkillsState.strength)

    @router.message(F.text == "üèπ –ò–∑–º–µ–Ω–∏—Ç—å –õ–æ–≤–∫–æ—Å—Ç—å")
    async def change_agility(message, state):
        await message.answer(
            'üéØ *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –õ–æ–≤–∫–æ—Å—Ç–∏:*\n',
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(SkillsState.agility)

    @router.message(F.text == "üçÄ –ò–∑–º–µ–Ω–∏—Ç—å –£–¥–∞—á–∞")
    async def change_luck(message, state):
        await message.answer(
            '‚ú® *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –£–¥–∞—á–∏:*\n',
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(SkillsState.luck)

    @router.message(F.text == "ü¶ä –ò–∑–º–µ–Ω–∏—Ç—å –•–∏—Ç—Ä–æ—Å—Ç—å")
    async def change_cunning(message, state):
        await message.answer(
            'üß† *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –•–∏—Ç—Ä–æ—Å—Ç–∏:*\n',
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(SkillsState.cunning)

    @router.message(F.text == "üåü –ò–∑–º–µ–Ω–∏—Ç—å –•–∞—Ä–∏–∑–º—É")
    async def change_charisma(message, state):
        await message.answer(
            'üå† *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –•–∞—Ä–∏–∑–º—ã:*\n',
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(SkillsState.charisma)



    @router.message(SkillsState.strength)
    async def change_strength(message, state):
        new_stat = message.text
        try:
            value = int(new_stat)
            if value not in (-2, -1, 0, 1, 2, 3):
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -2 –¥–æ 3.")
                return
            else:
                past_value = db.get_data(message.chat.id, request='SELECT power FROM stats WHERE chat_id == ?')[0][0]
                db.insert_data(value, message.chat.id, request='update stats set power = ? WHERE chat_id = ?')
                name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
                text = (
                    f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –°–∏–ª–∞</b>\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                    f"üìà –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{past_value}</code>\n"
                    f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{value}</code>\n\n"
                    f"‚ú® –í–∞—à–∞ —Å–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
                )

                await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
                await state.clear()

        except ValueError as ex:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")


    @router.message(SkillsState.agility)
    async def change_agility(message, state):
        new_stat = message.text
        try:
            value = int(new_stat)
            if value not in (-2, -1, 0, 1, 2, 3):
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -2 –¥–æ 3.")
                return
            else:
                past_value = db.get_data(message.chat.id, request='SELECT agility FROM stats WHERE chat_id == ?')[0][0]
                db.insert_data(value, message.chat.id, request='update stats set agility = ? WHERE chat_id = ?')
                name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
                text = (
                    f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –õ–æ–≤–∫–æ—Å—Ç—å</b>\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                    f"üìà –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{past_value}</code>\n"
                    f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{value}</code>\n\n"
                    f"‚ú® –í–∞—à–∞ –ª–æ–≤–∫–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
                )
                await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
                await state.clear()
        except ValueError as ex:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")


    @router.message(SkillsState.luck)
    async def change_luck(message, state):
        new_stat = message.text
        try:
            value = int(new_stat)
            if value not in (-2, -1, 0, 1, 2, 3):
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -2 –¥–æ 3.")
                return
            else:
                past_value = db.get_data(message.chat.id, request='SELECT luck FROM stats WHERE chat_id == ?')[0][0]
                db.insert_data(value, message.chat.id, request='update stats set luck = ? WHERE chat_id = ?')
                name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]

                text = (
                    f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –£–¥–∞—á–∞</b>\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                    f"üìà –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{past_value}</code>\n"
                    f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{value}</code>\n\n"
                    f"‚ú® –í–∞—à–∞ —É–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
                )
                await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
                await state.clear()
        except ValueError as ex:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")


    @router.message(SkillsState.cunning)
    async def change_cunning(message, state):
        new_stat = message.text
        try:
            value = int(new_stat)
            if value not in (-2, -1, 0, 1, 2, 3):
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -2 –¥–æ 3.")
                return
            else:
                past_value = db.get_data(message.chat.id, request='SELECT cunning FROM stats WHERE chat_id == ?')[0][0]
                db.insert_data(value, message.chat.id, request='update stats set cunning = ? WHERE chat_id = ?')
                name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
                
                text = (
                    f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –•–∏—Ç—Ä–æ—Å—Ç—å</b>\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                    f"üìà –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{past_value}</code>\n"
                    f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{value}</code>\n\n"
                    f"‚ú® –í–∞—à–∞ —Ö–∏—Ç—Ä–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
                )
                await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
                await state.clear()
        except ValueError as ex:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")


    @router.message(SkillsState.charisma)
    async def change_charisma(message, state):
        new_stat = message.text
        try:
            value = int(new_stat)
            if value not in (-2, -1, 0, 1, 2, 3):
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -2 –¥–æ 3.")
                return
            else:
                past_value = db.get_data(message.chat.id, request='SELECT charisma FROM stats WHERE chat_id == ?')[0][0]
                db.insert_data(value, message.chat.id, request='update stats set charisma = ? WHERE chat_id = ?')
                name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
                
                text = (
                    f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –•–∞—Ä–∏–∑–º–∞</b>\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                    f"üìà –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{past_value}</code>\n"
                    f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{value}</code>\n\n"
                    f"‚ú® –í–∞—à–∞ —Ö–∞—Ä–∏–∑–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
                )
                await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
                await state.clear()
        except ValueError as ex:
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä.")