from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from states.state_change_hero import FractionStats
from keyboards.keyboards import profile_keyboard, fractions_keyboard_choice, fractions_keyboard
from handlers.handlers_changes_stats.send_mes_all import send_message_all_users

async def init_fractions(router, F, db, message):

    @router.message(F.text == "‚ú® –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π")
    async def change_positive_prestige(message: Message, state: FSMContext):
        current_state = await state.get_state()
        
        if current_state == FractionStats.cats_choice.state: 
            rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == 3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –Ω–µ–∫—É–¥–∞!")

            else:
                await message.answer(
                    'üêæ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ú–∞—Ä–∫–∏–∑–∞—Ç–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    '‚ú® –ß–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ - —Ç–µ–º –ª—É—á—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -3, -2, -1, 0: –æ—Ç 0 –¥–æ 5\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 1: –æ—Ç 0 –¥–æ 10\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 2: –æ—Ç 0 –¥–æ 15',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.cats_p)

        elif current_state == FractionStats.birds_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == 3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –Ω–µ–∫—É–¥–∞!")

            else:
                await message.answer(
                    'ü¶Ö <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ö—Ä—ã–ª–∞—Ç—ã—Ö –î–∏–Ω–∞—Å—Ç–∏–π</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    '‚ú® –ß–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ - —Ç–µ–º –ª—É—á—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -3, -2, -1, 0: –æ—Ç 0 –¥–æ 5\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 1: –æ—Ç 0 –¥–æ 10\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 2: –æ—Ç 0 –¥–æ 15',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.birds_p)

        elif current_state == FractionStats.alliance_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == 3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –Ω–µ–∫—É–¥–∞!")

            else:
                await message.answer(
                    'üå≥ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ê–ª—å—è–Ω—Å–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    '‚ú® –ß–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ - —Ç–µ–º –ª—É—á—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -3, -2, -1, 0: –æ—Ç 0 –¥–æ 5\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 1: –æ—Ç 0 –¥–æ 10\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 2: –æ—Ç 0 –¥–æ 15',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.alliance_p)

        elif current_state == FractionStats.nation_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == 3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –Ω–µ–∫—É–¥–∞!")

            else:
                await message.answer(
                    'üçÉ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ù–∞—Ä–æ–¥–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    '‚ú® –ß–µ–º –≤—ã—à–µ —á–∏—Å–ª–æ - —Ç–µ–º –ª—É—á—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -3, -2, -1, 0: –æ—Ç 0 –¥–æ 5\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 1: –æ—Ç 0 –¥–æ 10\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 2: –æ—Ç 0 –¥–æ 15',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.nation_p)

    @router.message(F.text == "üí¢ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π")
    async def change_negative_prestige(message: Message, state: FSMContext):
        current_state = await state.get_state()
        if current_state == FractionStats.cats_choice.state: 
            rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == -3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ö–æ—Ç—ã —Å—á–∏—Ç–∞—é—Ç —á—Ç–æ –≤—ã —Ö—É–µ—Å–æ—Å, —Ö—É–∂–µ –Ω–µ–∫—É–¥–∞!")
            else:
                await message.answer(
                    'üêæ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ú–∞—Ä–∫–∏–∑–∞—Ç–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    'üí¢ –ß–µ–º –Ω–∏–∂–µ —á–∏—Å–ª–æ - —Ç–µ–º —Ö—É–∂–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏\n\n'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 3, 2, 1, 0: –æ—Ç -3 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -1: –æ—Ç -6 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -2: –æ—Ç -9 –¥–æ 0',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.cats_m)

        elif current_state == FractionStats.birds_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == -3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü—Ç–∏—Ü—ã —Å—á–∏—Ç–∞—é—Ç —á—Ç–æ –≤—ã —Ö—É–µ—Å–æ—Å, —Ö—É–∂–µ –Ω–µ–∫—É–¥–∞!")
            else:
                await message.answer(
                    'ü¶Ö <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ö—Ä—ã–ª–∞—Ç—ã—Ö –î–∏–Ω–∞—Å—Ç–∏–π</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    'üí¢ –ß–µ–º –Ω–∏–∂–µ —á–∏—Å–ª–æ - —Ç–µ–º —Ö—É–∂–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏\n\n'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 3, 2, 1, 0: –æ—Ç -3 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -1: –æ—Ç -6 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -2: –æ—Ç -9 –¥–æ 0',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.birds_m)

        elif current_state == FractionStats.alliance_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == -3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ê–ª—å—è–Ω—Å —Å—á–∏—Ç–∞–µ—Ç —á—Ç–æ –≤—ã —Ö—É–µ—Å–æ—Å, —Ö—É–∂–µ –Ω–µ–∫—É–¥–∞!")
            else:
                await message.answer(
                    'üå≥ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ê–ª—å—è–Ω—Å–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    'üí¢ –ß–µ–º –Ω–∏–∂–µ —á–∏—Å–ª–æ - —Ç–µ–º —Ö—É–∂–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏\n\n'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                    f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 3, 2, 1, 0: –æ—Ç -3 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -1: –æ—Ç -6 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -2: –æ—Ç -9 –¥–æ 0',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.alliance_m)

        elif current_state == FractionStats.nation_choice.state:
            rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]
            if rep == -3:
                await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–∞—Ä–æ–¥ —Å—á–∏—Ç–∞–µ—Ç —á—Ç–æ –≤—ã —Ö—É–µ—Å–æ—Å, —Ö—É–∂–µ –Ω–µ–∫—É–¥–∞!")
            else:
                await message.answer(
                    'üçÉ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ù–∞—Ä–æ–¥–∞</b>\n\n'
                    '‚ñ´Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b>\n'
                    '‚ñ´Ô∏è –ù–∞–ø—Ä–∏–º–µ—Ä: <i>1, 4, 9, 16</i>\n\n'
                    'üí¢ –ß–µ–º –Ω–∏–∂–µ —á–∏—Å–ª–æ - —Ç–µ–º —Ö—É–∂–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏\n\n'
                    '<i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞:</i>\n'
                   f'<b>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> <code>{rep}</code>\n\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ 3, 2, 1, 0: –æ—Ç -3 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -1: –æ—Ç -6 –¥–æ 0\n'
                    '‚Ä¢ –ü—Ä–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ -2: –æ—Ç -9 –¥–æ 0',
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.set_state(FractionStats.nation_m)

    @router.message(F.text == "üêæ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Å—Ç–∏–∂ –ö–æ—Ç–æ–≤")
    async def change_cats(message, state):
        await message.answer(
            '–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:',
            parse_mode="Markdown",
            reply_markup=fractions_keyboard_choice()
        )
        await state.set_state(FractionStats.cats_choice)

    @router.message(F.text == "ü¶Ö –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Å—Ç–∏–∂ –ü—Ç–∏—Ü")
    async def change_birds(message, state):
        await message.answer(
            '–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:',
            parse_mode="Markdown",
            reply_markup=fractions_keyboard_choice()
        )
        await state.set_state(FractionStats.birds_choice)

    @router.message(F.text == "üå≤ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Å—Ç–∏–∂ –õ–µ—Å–Ω–æ–≥–æ –∞–ª—å—è–Ω—Å–∞")
    async def change_trees(message, state):
        await message.answer(
            '–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:',
            parse_mode="Markdown",
            reply_markup=fractions_keyboard_choice()
        )
        await state.set_state(FractionStats.alliance_choice)

    @router.message(F.text == "üåø –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Å—Ç–∏–∂ –õ–µ—Å–Ω–æ–≥–æ –Ω–∞—Ä–æ–¥–∞")
    async def change_mama(message, state):
        await message.answer(
            '–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:',
            parse_mode="Markdown",
            reply_markup=fractions_keyboard_choice()
        )
        await state.set_state(FractionStats.nation_choice)

    async def recalculation_positive(colum_rep, colum_p, colum_m, message, db): #marquisate_rep marquisate_prestige_p marquisate_prestige_m

        while True:
            rep = db.get_data(message.chat.id, request=f'SELECT {colum_rep} FROM fractions WHERE chat_id == ?')[0][0]
            prestige_p = db.get_data(message.chat.id, request=f'SELECT {colum_p} FROM fractions WHERE chat_id == ?')[0][0]
            prestige_m = db.get_data(message.chat.id, request=f'SELECT {colum_m} FROM fractions WHERE chat_id == ?')[0][0]

            if rep == 0 and prestige_m <= -3: #–ë–õ–Ø–¢–¨ –≠–¢–û –ü–ò–ó–î–ï–¶ –ù–û –¢–£–¢ 0 –∞ –Ω–∏–∂–µ -1 —è –¥–æ–ª–≥–æ –≥–æ–ª–æ–≤—É –µ–±–∞–ª
                value_rep = rep - 1
                value_m = prestige_m + 3
                db.insert_data(value_rep, message.chat.id, request=f'UPDATE fractions SET {colum_rep} = ? WHERE chat_id = ?')
                db.insert_data(value_m, message.chat.id, request=f'UPDATE fractions SET {colum_m} = ? WHERE chat_id = ?')

            elif rep == -1 and prestige_m <= -6:
                value_rep = rep - 1
                value_m = prestige_m + 6
                db.insert_data(value_rep, message.chat.id, request=f'UPDATE fractions SET {colum_rep} = ? WHERE chat_id = ?')
                db.insert_data(value_m, message.chat.id, request=f'UPDATE fractions SET {colum_m} = ? WHERE chat_id = ?')
            else:
                break

    async def recalculation_negative(colum_rep, colum_p, colum_m, message, db): #marquisate_rep marquisate_prestige_p marquisate_prestige_m
        while True:
            rep = db.get_data(message.chat.id, request=f'SELECT {colum_rep} FROM fractions WHERE chat_id == ?')[0][0]
            prestige_p = db.get_data(message.chat.id, request=f'SELECT {colum_p} FROM fractions WHERE chat_id == ?')[0][0]
            prestige_m = db.get_data(message.chat.id, request=f'SELECT {colum_m} FROM fractions WHERE chat_id == ?')[0][0]
            if rep == 0 and prestige_p >= 5: #–ë–õ–Ø–¢–¨ –≠–¢–û –ü–ò–ó–î–ï–¶ –ù–û –¢–£–¢ 0 –∞ –Ω–∏–∂–µ -1 —è –¥–æ–ª–≥–æ –≥–æ–ª–æ–≤—É –µ–±–∞–ª
                value_rep = rep + 1
                value_p = prestige_p - 5
                db.insert_data(value_rep, message.chat.id, request=f'UPDATE fractions SET {colum_rep} = ? WHERE chat_id = ?')
                db.insert_data(value_p, message.chat.id, request=f'UPDATE fractions SET {colum_p} = ? WHERE chat_id = ?')

            elif rep == 1 and prestige_p >= 10:
                value_rep = rep + 1
                value_p = prestige_p - 10
                db.insert_data(value_rep, message.chat.id, request=f'UPDATE fractions SET {colum_rep} = ? WHERE chat_id = ?')
                db.insert_data(value_p, message.chat.id, request=f'UPDATE fractions SET {colum_p} = ? WHERE chat_id = ?')
            else:
                break

    @router.message(FractionStats.cats_p)
    async def marquisate_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep <= 0 and not 0 <= data_user <= 5:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 5!")
                return

            elif last_rep == 1 and not 0 <= data_user <= 10:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 10!")
                return

            elif last_rep == 2 and not 0 <= data_user <= 15:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 15!")
                return

            if last_rep <= 0 and data_user == 5:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            elif last_rep == 1 and data_user == 10:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            elif last_rep == 2 and data_user == 15:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET marquisate_prestige_p = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_positive('marquisate_rep', 'marquisate_prestige_p', 'marquisate_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ü—Ä–µ—Å—Ç–∏–∂–∞ –ú–∞—Ä–∫–∏—Å–∞—Ç–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.birds_p)
    async def winged_dynasties_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep <= 0 and not 0 <= data_user <= 5:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 5!")
                return

            elif last_rep == 1 and not 0 <= data_user <= 10:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 10!")
                return

            elif last_rep == 2 and not 0 <= data_user <= 15:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 15!")
                return

            if last_rep <= 0 and data_user == 5:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            elif last_rep == 1 and data_user == 10:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            elif last_rep == 2 and data_user == 15:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET winged_dynasties_prestige_p = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_positive('winged_dynasties_rep', 'winged_dynasties_prestige_p', 'winged_dynasties_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ü—Ä–µ—Å—Ç–∏–∂–∞ –ö—Ä—ã–ª–∞—Ç—ã—Ö –î–∏–Ω–∞—Å—Ç–∏–π</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.alliance_p)
    async def forest_alliance_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep <= 0 and not 0 <= data_user <= 5:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 5!")
                return

            elif last_rep == 1 and not 0 <= data_user <= 10:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 10!")
                return

            elif last_rep == 2 and not 0 <= data_user <= 15:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 15!")
                return

            if last_rep <= 0 and data_user == 5:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            elif last_rep == 1 and data_user == 10:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            elif last_rep == 2 and data_user == 15:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET forest_alliance_prestige_p = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_positive('forest_alliance_rep', 'forest_alliance_prestige_p', 'forest_alliance_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ü—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ê–ª—å—è–Ω—Å–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.nation_p)
    async def woodland_folk_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep <= 0 and not 0 <= data_user <= 5:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 5!")
                return

            elif last_rep == 1 and not 0 <= data_user <= 10:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 10!")
                return

            elif last_rep == 2 and not 0 <= data_user <= 15:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ 15!")
                return

            if last_rep <= 0 and data_user == 5:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            elif last_rep == 1 and data_user == 10:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            elif last_rep == 2 and data_user == 15:
                value = last_rep + 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET woodland_folk_prestige_p = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_positive('woodland_folk_rep', 'woodland_folk_prestige_p', 'woodland_folk_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ü—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ù–∞—Ä–æ–¥–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.cats_m)
    async def marquisate_negative_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep >= 0 and not -3 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -3!")
                return

            elif last_rep == -1 and not -6 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -6!")
                return

            elif last_rep == -2 and not -9 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return
            
            elif last_rep == -3:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            if last_rep >= 0 and data_user == -3:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            elif last_rep == -1 and data_user == -6:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            elif last_rep == -2 and data_user == -9:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET marquisate_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET marquisate_prestige_m = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT marquisate_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_negative('marquisate_rep', 'marquisate_prestige_p', 'marquisate_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ù–µ–≥–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ú–∞—Ä–∫–∏—Å–∞—Ç–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.birds_m)
    async def winged_dynasties_negative_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep >= 0 and not -3 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -3!")
                return

            elif last_rep == -1 and not -6 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -6!")
                return

            elif last_rep == -2 and not -9 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            elif last_rep == -3:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            if last_rep >= 0 and data_user == -3:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            elif last_rep == -1 and data_user == -6:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            elif last_rep == -2 and data_user == -9:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET winged_dynasties_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET winged_dynasties_prestige_m = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT winged_dynasties_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_negative('winged_dynasties_rep', 'winged_dynasties_prestige_p', 'winged_dynasties_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ù–µ–≥–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –ö—Ä—ã–ª–∞—Ç—ã—Ö –î–∏–Ω–∞—Å—Ç–∏–π</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.alliance_m)
    async def forest_alliance_negative_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep >= 0 and not -3 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -3!")
                return

            elif last_rep == -1 and not -6 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -6!")
                return

            elif last_rep == -2 and not -9 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            elif last_rep == -3:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            if last_rep >= 0 and data_user == -3:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            elif last_rep == -1 and data_user == -6:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            elif last_rep == -2 and data_user == -9:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET forest_alliance_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET forest_alliance_prestige_m = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT forest_alliance_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_negative('forest_alliance_rep', 'forest_alliance_prestige_p', 'forest_alliance_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ù–µ–≥–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ê–ª—å—è–Ω—Å–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return


    @router.message(FractionStats.nation_m)
    async def woodland_folk_negative_prestige_get(message, state):
        data_user = message.text
        try:
            last_rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]
            data_user = int(data_user)
            input_user = int(data_user)

            if last_rep >= 0 and not -3 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -3!")
                return

            elif last_rep == -1 and not -6 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -6!")
                return

            elif last_rep == -2 and not -9 <= data_user <= 0:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            elif last_rep == -3:
                await message.answer(f"‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ: {data_user} (—Ä–µ–ø—É—Ç–∞—Ü–∏—è {last_rep}) - –¥–æ–ø—É—Å—Ç–∏–º–æ —Ç–æ–ª—å–∫–æ –æ—Ç 0 –¥–æ -9!")
                return

            if last_rep >= 0 and data_user == -3:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            elif last_rep == -1 and data_user == -6:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            elif last_rep == -2 and data_user == -9:
                value = last_rep - 1
                data_user = 0
                db.insert_data(value, message.chat.id, request='UPDATE fractions SET woodland_folk_rep = ? WHERE chat_id = ?')

            db.insert_data(data_user, message.chat.id, request='UPDATE fractions SET woodland_folk_prestige_m = ? WHERE chat_id = ?')
            name_user = db.get_data(message.chat.id, request='SELECT name FROM info WHERE chat_id == ?')[0][0]
            rep = db.get_data(message.chat.id, request='SELECT woodland_folk_rep FROM fractions WHERE chat_id == ?')[0][0]

            await recalculation_negative('woodland_folk_rep', 'woodland_folk_prestige_p', 'woodland_folk_prestige_m', message, db)

            text = (
                f"üõ† <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ù–µ–≥–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç–∏–∂–∞ –õ–µ—Å–Ω–æ–≥–æ –ù–∞—Ä–æ–¥–∞</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{name_user}</code>\n"
                f"‚ñ´Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <code>{input_user}</code>\n"
                f"‚ñ´Ô∏è –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: <code>{rep}</code>"
            )
            await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
            await state.clear()

        except ValueError:
            await message.answer(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞\n\n"
                "‚ñ™Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ\n"
                f"‚ñ™Ô∏è –í—ã –≤–≤–µ–ª–∏: *{data_user}*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            )
            return