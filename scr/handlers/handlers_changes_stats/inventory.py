from aiogram.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from states.state_change_hero import InventoryStats
from handlers.handlers_changes_stats.send_mes_all import send_message_all_users
from keyboards.keyboards import profile_keyboard

async def init_inventory(router, F, db, message):
    @router.message(F.text == "üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —à–º–µ–∫–µ–ª–∏")
    async def capacity(message: Message, state: FSMContext):
        await message.answer(
            "üí∞ –í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–º–µ–∫–µ–ª–µ–π:",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(InventoryStats.money)

    @router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
    async def add_item_start(message: Message, state: FSMContext):
        await message.answer(
            "üì¶ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=ReplyKeyboardRemove()
        )
        await state.set_state(InventoryStats.add_item)

    @router.message(F.text == "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
    async def remove_item_start(message: Message, state: FSMContext):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        items_data = db.get_data(message.chat.id, request='select items from inventory where chat_id == ?')
        if not items_data or not items_data[0][0]:
            await message.answer("‚ùå –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!")
            return
        
        items = items_data[0][0].split('|') 
    
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text=item)] for item in items],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        
        await message.answer(
            "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
            reply_markup=keyboard
        )
        await state.set_state(InventoryStats.remove_item)






    @router.message(InventoryStats.money)
    async def money_get(message: Message, state: FSMContext):
        try:
            new_money_value = int(message.text)
        except ValueError:
            await message.reply("‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")
            return

        current_value = db.get_data(message.chat.id, request='select money from inventory where chat_id == ?')[0][0]
        db.insert_data(
            new_money_value,
            message.chat.id,
            request='UPDATE inventory SET money = ? WHERE chat_id = ?'
        )
        name_user = db.get_data(message.chat.id, request='select name from info where chat_id == ?')[0][0]
        text = (
            f"üí∞ <b>–®–º–µ–∫–µ–ª–∏ –∑–∞—à–µ–≤–µ–ª–∏–ª–∏—Å—å!</b> üí∏\n\n"
            f"üë§ –í–∫–ª–∞–¥—á–∏–∫: <code>{name_user}</code>\n"
            f"üìä –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:\n"
            f"‚Ä¢ –ë—ã–ª–æ: <code>{current_value}</code> —à–º–µ–∫–µ–ª–µ–π\n"
            f"‚Ä¢ –°—Ç–∞–ª–æ: <code>{new_money_value}</code> —à–º–µ–∫–µ–ª–µ–π\n\n"
        )
        await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
        await state.clear()

    @router.message(InventoryStats.add_item)
    async def add_item_process(message: Message, state: FSMContext):
        new_item = message.text.strip()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        items_data = db.get_data(message.chat.id, request='select items from inventory where chat_id == ?')
        current_items = items_data[0][0].split('|') if items_data and items_data[0][0] else []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
        if new_item in current_items:
            await message.reply("‚ùå –≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ø–∏—é –ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–µ–¥–º–µ—Ç–∞ + –µ–≥–æ_–Ω–æ–º–µ—Ä")
            return
            
        current_items.append(new_item)
        updated_items = '|'.join(current_items)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db.insert_data(
            updated_items,
            message.chat.id,
            request='UPDATE inventory SET items = ? WHERE chat_id = ?'
        )
        
        name_user = db.get_data(message.chat.id, request='select name from info where chat_id == ?')[0][0]
        text = (
            f"üéâ <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–±–Ω–æ–≤–ª–µ–Ω!</b> üõçÔ∏è\n\n"
            f"üë§ –í–∫–ª–∞–¥—á–∏–∫: <code>{name_user}</code>\n"
            f"üÜï –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: <code>{new_item}</code>\n"
            f"üì¶ –¢–µ–ø–µ—Ä—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: <code>{len(current_items)}</code> –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n\n"
        )
        await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
        await state.clear()

    @router.message(InventoryStats.remove_item)
    async def remove_item_process(message: Message, state: FSMContext):
        item_to_remove = message.text.strip()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        items_data = db.get_data(message.chat.id, request='select items from inventory where chat_id == ?')
        if not items_data or not items_data[0][0]:
            await message.reply("‚ùå –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!")
            await state.clear()
            return
            
        current_items = items_data[0][0].split('|')
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç
        if item_to_remove not in current_items:
            await message.reply("‚ùå –¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!")
            return
            
        current_items.remove(item_to_remove)
        updated_items = '|'.join(current_items) if current_items else None
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db.insert_data(
            updated_items,
            message.chat.id,
            request='UPDATE inventory SET items = ? WHERE chat_id = ?'
        )
        
        name_user = db.get_data(message.chat.id, request='select name from info where chat_id == ?')[0][0]
        text = (
            f"üóëÔ∏è <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–±–Ω–æ–≤–ª–µ–Ω!</b> üõçÔ∏è\n\n"
            f"üë§ –í–∫–ª–∞–¥—á–∏–∫: <code>{name_user}</code>\n"
            f"‚ùå –£–¥–∞–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: <code>{item_to_remove}</code>\n"
            f"üì¶ –¢–µ–ø–µ—Ä—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: <code>{len(current_items)}</code> –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n\n"
        )
        await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
        await state.clear()

    @router.message(InventoryStats.money)
    async def money_get(message: Message, state: FSMContext):
        try:
            new_money_value = int(message.text)
        except ValueError:
            await message.reply("‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")
            return

        current_value = db.get_data(message.chat.id, request='select money from inventory where chat_id == ?')[0][0]
        db.insert_data(
            new_money_value,
            message.chat.id,
            request='UPDATE inventory SET money = ? WHERE chat_id = ?'
        )
        name_user = db.get_data(message.chat.id, request='select name from info where chat_id == ?')[0][0]
        text = (
            f"üí∞ <b>–®–º–µ–∫–µ–ª–∏ –∑–∞—à–µ–≤–µ–ª–∏–ª–∏—Å—å!</b> üí∏\n\n"
            f"üë§ –í–∫–ª–∞–¥—á–∏–∫: <code>{name_user}</code>\n"
            f"üìä –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:\n"
            f"‚Ä¢ –ë—ã–ª–æ: <code>{current_value}</code> —à–º–µ–∫–µ–ª–µ–π\n"
            f"‚Ä¢ –°—Ç–∞–ª–æ: <code>{new_money_value}</code> —à–º–µ–∫–µ–ª–µ–π\n\n"
        )
        await send_message_all_users(db=db, message=message, text=text, markup=profile_keyboard())
        await state.clear()